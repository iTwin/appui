// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BeInspireTree with interface data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
          Object {
            "children": Array [],
            "id": "0-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": true,
          },
        ],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": true,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "0-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "0-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": true,
  },
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-0-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-0-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-0",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "id": "1-1-0",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
          Object {
            "children": Array [],
            "id": "1-1-1",
            "isChecked": false,
            "isExpanded": false,
            "isSelected": false,
          },
        ],
        "id": "1-1",
        "isChecked": false,
        "isExpanded": true,
        "isSelected": false,
      },
    ],
    "id": "1",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": false,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "0-0",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
      Object {
        "children": Array [],
        "id": "0-1",
        "isChecked": false,
        "isExpanded": false,
        "isSelected": true,
      },
    ],
    "id": "0",
    "isChecked": false,
    "isExpanded": true,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": false,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "0",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
  Object {
    "children": Array [],
    "id": "1",
    "isChecked": false,
    "isExpanded": false,
    "isSelected": true,
  },
]
`;
