/*---------------------------------------------------------------------------------------------
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See LICENSE.md in the project root for license terms and full copyright notice.
*--------------------------------------------------------------------------------------------*/
@import "../style/index";
@import "../inputs/variables";
@import "../scrollbar";
@import "../z-index";

//HACK
// there is an issue in react-select where generated styles have higher
// priority than the class prefix style solution, which we use. I thought
// this was the best solution after testing several, the better of which
// caused an obscure node-sass error
.reactSelectTop {
  $uicore-select-padding-bordered:  $uicore-inputs-padding-bordered;

  padding:            $uicore-select-padding-bordered ($uicore-bordered-padding - 3px);
  margin:             $uicore-inputs-margin 0;
  font-size:          $uicore-font-size;
  line-height:        $uicore-line-height;
  color:              $buic-text-color;
  background-color:   $buic-background-control;
  background-image:   none;
  border: 1px solid   $buic-inputs-border;
  border-radius:      $uicore-border-radius;
  box-sizing:         border-box;
  box-shadow:         $buic-inputs-boxshadow 0px 1px 1px inset;
  transition:         border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  @include firefox-only {
    padding-top:      $uicore-select-padding-bordered - 1px;
    padding-bottom:   $uicore-select-padding-bordered - 1px;
  }


  .react-select {
    &__control {
      background-color: $buic-background-1;
      color: $buic-foreground-body;
      border: 1px solid $buic-inputs-border;

      &:hover {
        border: 1px solid $buic-foreground-activehover;
      }

      &[disabled] {
        background-color: $buic-foreground-disabled;
      }

      svg {
        width: unset;
        height: unset;
      }

      &--is-focused {
        box-shadow: none;
      }
    }

    &__single-value {
      color: $buic-foreground-body;
    }

    &__indicator {
      color: $buic-foreground-body;

      &:hover {
        color: $buic-foreground-activehover;
      }

      &-separator {
        visibility: hidden;
      }
    }

    &__input {
      input {
        width: 100% !important;
        color: $buic-foreground-body !important;
      }
    }

    &__option {
      &:active {
        background-color: $buic-background-3;
      }

      &:hover:not(&--is-selected) {
        background-color: $buic-background-2;
      }

      &--is-focused:not(&--is-selected) {
        background-color: $buic-background-2;
      }

      &--is-selected {
        color: $buic-foreground-body;
        background-color: $buic-background-5;

        &:active {
          background-color: $buic-background-4;
        }
      }
    }

    &__menu {
      //HACK: double selector for specificity
      &#{&} {
        @include uicore-scrollbar(
          $buic-background-scrollbar,
          $buic-foreground-body
        );
        margin-top: 0;
        color: $buic-foreground-body;
        background-color: $buic-background-control;
        @include uicore-z-index(dialog-popup);
      }
    }
  }

  // Double .react-select__menu intended to be more specific than the inline style.
  .react-select__menu.react-select__menu {
    @include uicore-scrollbar($buic-background-scrollbar, $buic-foreground-body);
    margin-top: 0;
    color: $buic-foreground-body;
    background-color: $buic-background-control;
    @include uicore-z-index(dialog-popup);
  }
}

.selectCheckboxOption {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.checkbox {
  // prevent strange click handling by react-select when checkbox pressed
  pointer-events: none;
  margin-right: 8px;
}
