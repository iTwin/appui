// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backstage <Backstage /> CommandLaunchBackstageItem renders correctly 1`] = `
<BackstageItem
  icon={
    <Icon
      iconInfo={
        Object {
          "iconClass": "icon-placeholder",
          "iconSrc": undefined,
        }
      }
    />
  }
  key="my-command-id"
  label="tests.label"
  onClick={[Function]}
/>
`;

exports[`Backstage <Backstage /> FrontstageLaunchBackstageItem renders correctly 1`] = `
<BackstageItem
  icon={
    <Icon
      iconInfo={
        Object {
          "iconClass": "icon-placeholder",
          "iconSrc": undefined,
        }
      }
    />
  }
  key="Test1"
  label="tests.label"
  onClick={[Function]}
/>
`;

exports[`Backstage <Backstage /> SeparatorBackstageItem renders correctly 1`] = `
<BackstageSeparator
  key="NaN"
/>
`;

exports[`Backstage <Backstage /> TaskLaunchBackstageItem renders correctly 1`] = `
<BackstageItem
  icon={
    <Icon
      iconInfo={
        Object {
          "iconClass": "icon-placeholder",
          "iconSrc": undefined,
        }
      }
    />
  }
  key="ExampleWorkflow:Task1"
  label="tests.label"
  onClick={[Function]}
/>
`;

exports[`Backstage <Backstage /> renders correctly - !isVisible 1`] = `
<Backstage
  className="backstageClose"
  isOpen={true}
/>
`;

exports[`Backstage <Backstage /> renders correctly - isVisible 1`] = `
<Fragment>
  <Backstage
    className="backstageOpen"
    isOpen={true}
  />
  <div
    onClick={[Function]}
    style={
      Object {
        "background": "#222222",
        "height": "100%",
        "left": "0px",
        "opacity": 0.6,
        "position": "absolute",
        "top": "0px",
        "width": "100%",
        "zIndex": 590,
      }
    }
  />
</Fragment>
`;

exports[`Backstage <Backstage /> with child items 1`] = `
<Fragment>
  <Backstage
    className="backstageOpen"
    isOpen={true}
    items={
      Array [
        <CommandLaunchBackstageItem
          commandHandler={
            Object {
              "execute": [Function],
            }
          }
          commandId="my-command-id"
          iconClass="icon-placeholder"
          labelKey="UiFramework:tests.label"
        />,
        <SeparatorBackstageItem />,
        <FrontstageLaunchBackstageItem
          frontstageId="Test1"
          iconClass="icon-placeholder"
          labelKey="UiFramework:tests.label"
        />,
        <SeparatorBackstageItem />,
        <TaskLaunchBackstageItem
          iconClass="icon-placeholder"
          labelKey="UiFramework:tests.label"
          taskId="Task1"
          workflowId="ExampleWorkflow"
        />,
      ]
    }
  />
  <div
    onClick={[Function]}
    style={
      Object {
        "background": "#222222",
        "height": "100%",
        "left": "0px",
        "opacity": 0.6,
        "position": "absolute",
        "top": "0px",
        "width": "100%",
        "zIndex": 590,
      }
    }
  />
</Fragment>
`;
