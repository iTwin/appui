// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CoreToolDefinitions ToolWidget should render correctly with Core Tool Definitions 1`] = `
<ToolWidgetWithDef
  horizontalToolbar={
    <Toolbar
      expandsTo={3}
      items={
        <UNDEFINED>
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-cursor",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "Select",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-fit-to-view",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.Fit",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-window-area",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.WindowArea",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-zoom",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.Zoom",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-hand-2",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.Pan",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-gyroscope",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.Rotate",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-walk",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.Walk",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-camera",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.ToggleCamera",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-airplane",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "View.Fly",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-section-plane",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "ViewClip.ByPlane",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-section-element",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "ViewClip.ByElement",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-section-shape",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "ViewClip.ByShape",
              }
            }
          />
          <ActionItemButton
            actionItem={
              ToolItemDef {
                "_commandHandler": Object {
                  "execute": [Function],
                  "getCommandArgs": undefined,
                  "parameters": undefined,
                },
                "_description": [Function],
                "_label": [Function],
                "_onItemExecuted": undefined,
                "_tooltip": "",
                "badgeType": undefined,
                "betaBadge": false,
                "execute": [Function],
                "getKey": [Function],
                "handleSizeKnown": [Function],
                "iconSpec": "icon-section-range",
                "isActive": false,
                "isEnabled": true,
                "isPressed": false,
                "isVisible": true,
                "stateSyncIds": Array [],
                "toolId": "ViewClip.ByRange",
              }
            }
          />
        </UNDEFINED>
      }
      panelAlignment={0}
    />
  }
  toolWidgetDef={
    ToolWidgetDef {
      "_appButton": undefined,
      "_handleSyncUiEvent": [Function],
      "_label": "",
      "_toolbarBaseName": "[Test1]ToolWidget",
      "_tooltip": "",
      "classId": undefined,
      "fillZone": false,
      "horizontalDirection": 3,
      "horizontalItems": undefined,
      "horizontalPanelAlignment": 0,
      "id": "toolWidget",
      "isFloating": false,
      "isFloatingStateSupported": false,
      "isFloatingStateWindowResizable": true,
      "isFreeform": false,
      "isStatusBar": false,
      "isToolSettings": false,
      "priority": 0,
      "state": 4,
      "stateChanged": false,
      "syncEventIds": Array [],
      "verticalDirection": 2,
      "verticalItems": undefined,
      "verticalPanelAlignment": 0,
      "widgetType": 0,
    }
  }
/>
`;

exports[`CoreToolDefinitions should render KeyInBrowser 1`] = `
<ExpandableItem
  hideIndicator={true}
  iconSpec="icon-process"
  labelKey="UiFramework:keyinbrowser.label"
  panel={
    <WithOnOutsideClick
      className="nz-toolbar-item-expandable-group-panel"
      onOutsideClick={[Function]}
    >
      <KeyinBrowser
        onCancel={[Function]}
        onExecute={[Function]}
      />
    </WithOnOutsideClick>
  }
>
  <div>
    <Item
      icon={
        <Unknown
          iconSpec="icon-process"
        />
      }
      onClick={[Function]}
      onKeyDown={[Function]}
      title="keyinbrowser.label"
    />
  </div>
</ExpandableItem>
`;
