// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backstage <Backstage /> renders correctly - !isVisible 1`] = `
<Backstage
  header={null}
  isOpen={false}
  onClose={[Function]}
  safeAreaInsets={0}
  showOverlay={true}
/>
`;

exports[`Backstage <Backstage /> renders correctly - isVisible 1`] = `
<Backstage
  header={null}
  isOpen={true}
  onClose={[Function]}
  safeAreaInsets={0}
  showOverlay={true}
/>
`;

exports[`Backstage <Backstage /> renders correctly with UserInfo 1`] = `
<Backstage
  header={
    <UserProfileBackstageItem
      userInfo={
        UserInfo {
          "email": Object {
            "id": "testuser001@mailinator.com",
          },
          "featureTracking": Object {
            "ultimateSite": "1004144426",
            "usageCountryIso": "US",
          },
          "id": "596c0d8b-eac2-46a0-aa4a-b590c3314e7c",
          "organization": Object {
            "id": "fefac5b-bcad-488b-aed2-df27bffe5786",
            "name": "Bentley",
          },
          "profile": Object {
            "firstName": "test",
            "lastName": "user",
          },
        }
      }
    />
  }
  isOpen={false}
  onClose={[Function]}
  safeAreaInsets={0}
  showOverlay={true}
/>
`;

exports[`Backstage <Backstage /> renders correctly with header 1`] = `
<Backstage
  header={
    <div>
       Hello World! 
    </div>
  }
  isOpen={false}
  onClose={[Function]}
  safeAreaInsets={0}
  showOverlay={true}
/>
`;

exports[`Backstage <Backstage /> with child items 1`] = `
<Backstage
  header={null}
  isOpen={true}
  onClose={[Function]}
  safeAreaInsets={0}
  showOverlay={true}
>
  <CommandLaunchBackstageItem
    commandId="my-command-id"
    execute={[Function]}
    iconSpec="icon-placeholder"
    labelKey="UiFramework:tests.label"
  />
  <SeparatorBackstageItem />
  <FrontstageLaunchBackstageItem
    frontstageId="Test1"
    iconSpec="icon-placeholder"
    labelKey="UiFramework:tests.label"
  />
  <SeparatorBackstageItem />
  <TaskLaunchBackstageItem
    iconSpec="icon-placeholder"
    labelKey="UiFramework:tests.label"
    taskId="Task1"
    workflowId="ExampleWorkflow"
  />
</Backstage>
`;
