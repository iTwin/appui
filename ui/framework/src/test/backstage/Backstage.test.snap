// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backstage <Backstage /> renders correctly - !isVisible 1`] = `
<Backstage
  isOpen={false}
  onClose={[Function]}
  showOverlay={true}
/>
`;

exports[`Backstage <Backstage /> renders correctly - isVisible 1`] = `
<Backstage
  isOpen={true}
  onClose={[Function]}
  showOverlay={true}
/>
`;

exports[`Backstage <Backstage /> with child items 1`] = `
<Backstage
  isOpen={true}
  items={
    Array [
      <CommandLaunchBackstageItem
        commandId="my-command-id"
        execute={[Function]}
        iconSpec="icon-placeholder"
        labelKey="UiFramework:tests.label"
      />,
      <SeparatorBackstageItem />,
      <FrontstageLaunchBackstageItem
        frontstageId="Test1"
        iconSpec="icon-placeholder"
        labelKey="UiFramework:tests.label"
      />,
      <SeparatorBackstageItem />,
      <TaskLaunchBackstageItem
        iconSpec="icon-placeholder"
        labelKey="UiFramework:tests.label"
        taskId="Task1"
        workflowId="ExampleWorkflow"
      />,
    ]
  }
  onClose={[Function]}
  showOverlay={true}
/>
`;

exports[`Backstage <CommandLaunchBackstageItem /> CommandLaunchBackstageItem renders correctly 1`] = `
<BackstageItem
  icon={
    <Unknown
      iconSpec="icon-placeholder"
    />
  }
  isActive={false}
  isDisabled={false}
  key="my-command-id"
  label="tests.label"
  onClick={[Function]}
/>
`;

exports[`Backstage <FrontstageLaunchBackstageItem /> FrontstageLaunchBackstageItem renders correctly when active 1`] = `
<BackstageItem
  icon={
    <Unknown
      iconSpec="icon-placeholder"
    />
  }
  isActive={true}
  isDisabled={false}
  key="Test1"
  label="tests.label"
  onClick={[Function]}
  subtitle=""
/>
`;

exports[`Backstage <FrontstageLaunchBackstageItem /> FrontstageLaunchBackstageItem renders correctly when inactive 1`] = `
<BackstageItem
  icon={
    <Unknown
      iconSpec="icon-placeholder"
    />
  }
  isActive={false}
  isDisabled={false}
  key="Test1"
  label="tests.label"
  onClick={[Function]}
  subtitle=""
/>
`;

exports[`Backstage <SeparatorBackstageItem /> SeparatorBackstageItem renders correctly 1`] = `
<BackstageSeparator
  key="NaN"
/>
`;

exports[`Backstage <TaskLaunchBackstageItem /> TaskLaunchBackstageItem renders correctly when active 1`] = `
<BackstageItem
  icon={
    <Unknown
      iconSpec="icon-placeholder"
    />
  }
  isActive={true}
  isDisabled={false}
  key="ExampleWorkflow:Task1"
  label="tests.label"
  onClick={[Function]}
/>
`;

exports[`Backstage <TaskLaunchBackstageItem /> TaskLaunchBackstageItem renders correctly when inactive 1`] = `
<BackstageItem
  icon={
    <Unknown
      iconSpec="icon-placeholder"
    />
  }
  isActive={false}
  isDisabled={false}
  key="ExampleWorkflow:Task1"
  label="tests.label"
  onClick={[Function]}
/>
`;
