// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BackstageComposer renders correctly - !isVisible 1`] = `
<Backstage
  isVisible={false}
>
  <FrontstageLaunchBackstageItem
    frontstageId="Test1"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test1"
    label="backstage.testFrontstage1"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test2"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test2"
    label="backstage.testFrontstage2"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test3"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test3"
    label="backstage.testFrontstage3"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test4"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test4"
    label="backstage.testFrontstage4"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-100-200"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="IModelOpen"
    iconSpec="icon-folder-opened"
    isEnabled={true}
    key="IModelOpen"
    label="backstage.imodelopen"
  />
  <CommandLaunchBackstageItem
    commandId="IModelIndex"
    execute={[Function]}
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="IModelIndex"
    label="teat.label"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-200-400"
  />
  <FrontstageLaunchBackstageItem
    description="backstage.iModelStage"
    frontstageId="ViewsFrontstage"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="ViewsFrontstage"
    label="backstage.viewIModel"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-400-500"
  />
  <CommandLaunchBackstageItem
    commandId="custom-test"
    description="subtitle"
    execute={[Function]}
    iconSpec="TestApp:icon"
    key="custom-test"
    label="backstage.custom"
    tooltip="tool-tip"
  />
</Backstage>
`;

exports[`BackstageComposer renders correctly - isVisible 1`] = `
<Backstage
  isVisible={true}
>
  <FrontstageLaunchBackstageItem
    frontstageId="Test1"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test1"
    label="backstage.testFrontstage1"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test2"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test2"
    label="backstage.testFrontstage2"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test3"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test3"
    label="backstage.testFrontstage3"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test4"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test4"
    label="backstage.testFrontstage4"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-100-200"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="IModelOpen"
    iconSpec="icon-folder-opened"
    isEnabled={true}
    key="IModelOpen"
    label="backstage.imodelopen"
  />
  <CommandLaunchBackstageItem
    commandId="IModelIndex"
    execute={[Function]}
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="IModelIndex"
    label="teat.label"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-200-400"
  />
  <FrontstageLaunchBackstageItem
    description="backstage.iModelStage"
    frontstageId="ViewsFrontstage"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="ViewsFrontstage"
    label="backstage.viewIModel"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-400-500"
  />
  <CommandLaunchBackstageItem
    commandId="custom-test"
    description="subtitle"
    execute={[Function]}
    iconSpec="TestApp:icon"
    key="custom-test"
    label="backstage.custom"
    tooltip="tool-tip"
  />
</Backstage>
`;

exports[`BackstageComposer renders correctly with AccessToken 1`] = `
<Backstage>
  <FrontstageLaunchBackstageItem
    frontstageId="Test1"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test1"
    label="backstage.testFrontstage1"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test2"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test2"
    label="backstage.testFrontstage2"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test3"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test3"
    label="backstage.testFrontstage3"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test4"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test4"
    label="backstage.testFrontstage4"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-100-200"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="IModelOpen"
    iconSpec="icon-folder-opened"
    isEnabled={true}
    key="IModelOpen"
    label="backstage.imodelopen"
  />
  <CommandLaunchBackstageItem
    commandId="IModelIndex"
    execute={[Function]}
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="IModelIndex"
    label="teat.label"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-200-400"
  />
  <FrontstageLaunchBackstageItem
    description="backstage.iModelStage"
    frontstageId="ViewsFrontstage"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="ViewsFrontstage"
    label="backstage.viewIModel"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-400-500"
  />
  <CommandLaunchBackstageItem
    commandId="custom-test"
    description="subtitle"
    execute={[Function]}
    iconSpec="TestApp:icon"
    key="custom-test"
    label="backstage.custom"
    tooltip="tool-tip"
  />
</Backstage>
`;

exports[`BackstageComposer renders correctly with header 1`] = `
<Backstage
  header={
    <div>
       Hello World! 
    </div>
  }
>
  <FrontstageLaunchBackstageItem
    frontstageId="Test1"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test1"
    label="backstage.testFrontstage1"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test2"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test2"
    label="backstage.testFrontstage2"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test3"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test3"
    label="backstage.testFrontstage3"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="Test4"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="Test4"
    label="backstage.testFrontstage4"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-100-200"
  />
  <FrontstageLaunchBackstageItem
    frontstageId="IModelOpen"
    iconSpec="icon-folder-opened"
    isEnabled={true}
    key="IModelOpen"
    label="backstage.imodelopen"
  />
  <CommandLaunchBackstageItem
    commandId="IModelIndex"
    execute={[Function]}
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="IModelIndex"
    label="teat.label"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-200-400"
  />
  <FrontstageLaunchBackstageItem
    description="backstage.iModelStage"
    frontstageId="ViewsFrontstage"
    iconSpec="icon-placeholder"
    isEnabled={true}
    key="ViewsFrontstage"
    label="backstage.viewIModel"
  />
  <SeparatorBackstageItem
    key="backstage-item-separator-400-500"
  />
  <CommandLaunchBackstageItem
    commandId="custom-test"
    description="subtitle"
    execute={[Function]}
    iconSpec="TestApp:icon"
    key="custom-test"
    label="backstage.custom"
    tooltip="tool-tip"
  />
</Backstage>
`;

exports[`BackstageComposer should handle sync events 1`] = `
<BackstageComposer
  isVisible={true}
>
  <Backstage
    isVisible={true}
  >
    <Backstage
      header={null}
      isOpen={true}
      onClose={[Function]}
      showOverlay={true}
    >
      <div
        className="nz-backstage-backstage_overlay nz-open nz-overlay"
        onClick={[Function]}
      />
      <div
        className="nz-backstage-backstage nz-open"
      >
        <ul>
          <FrontstageLaunchBackstageItem
            frontstageId="Test1"
            iconSpec="icon-placeholder"
            isEnabled={true}
            key="Test1"
            label="backstage.testFrontstage1"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="icon-placeholder"
                />
              }
              isActive={false}
              isDisabled={false}
              key="Test1"
              onClick={[Function]}
              subtitle=""
            >
              <li
                className="nz-backstage-item"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="icon-placeholder"
                  >
                    <i
                      className="icon icon-placeholder"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    backstage.testFrontstage1
                  </span>
                </div>
              </li>
            </BackstageItem>
          </FrontstageLaunchBackstageItem>
          <FrontstageLaunchBackstageItem
            frontstageId="Test2"
            iconSpec="icon-placeholder"
            isEnabled={true}
            key="Test2"
            label="backstage.testFrontstage2"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="icon-placeholder"
                />
              }
              isActive={false}
              isDisabled={false}
              key="Test2"
              onClick={[Function]}
              subtitle=""
            >
              <li
                className="nz-backstage-item"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="icon-placeholder"
                  >
                    <i
                      className="icon icon-placeholder"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    backstage.testFrontstage2
                  </span>
                </div>
              </li>
            </BackstageItem>
          </FrontstageLaunchBackstageItem>
          <FrontstageLaunchBackstageItem
            frontstageId="Test4"
            iconSpec="icon-placeholder"
            isEnabled={false}
            key="Test4"
            label="backstage.testFrontstage4"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="icon-placeholder"
                />
              }
              isActive={false}
              isDisabled={true}
              key="Test4"
              onClick={[Function]}
              subtitle=""
            >
              <li
                className="nz-backstage-item nz-disabled"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="icon-placeholder"
                  >
                    <i
                      className="icon icon-placeholder"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    backstage.testFrontstage4
                  </span>
                </div>
              </li>
            </BackstageItem>
          </FrontstageLaunchBackstageItem>
          <SeparatorBackstageItem
            key="backstage-item-separator-100-200"
          >
            <BackstageSeparator
              key="NaN"
            >
              <div
                className="nz-backstage-separator"
              />
            </BackstageSeparator>
          </SeparatorBackstageItem>
          <FrontstageLaunchBackstageItem
            frontstageId="IModelOpen"
            iconSpec="icon-folder-opened"
            isEnabled={true}
            key="IModelOpen"
            label="backstage.imodelopen"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="icon-folder-opened"
                />
              }
              isActive={false}
              isDisabled={false}
              key="IModelOpen"
              onClick={[Function]}
              subtitle=""
            >
              <li
                className="nz-backstage-item"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="icon-folder-opened"
                  >
                    <i
                      className="icon icon-folder-opened"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    backstage.imodelopen
                  </span>
                </div>
              </li>
            </BackstageItem>
          </FrontstageLaunchBackstageItem>
          <CommandLaunchBackstageItem
            commandId="IModelIndex"
            execute={[Function]}
            iconSpec="icon-placeholder"
            isEnabled={true}
            key="IModelIndex"
            label="teat.label"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="icon-placeholder"
                />
              }
              isActive={false}
              isDisabled={false}
              key="IModelIndex"
              onClick={[Function]}
            >
              <li
                className="nz-backstage-item"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="icon-placeholder"
                  >
                    <i
                      className="icon icon-placeholder"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    teat.label
                  </span>
                </div>
              </li>
            </BackstageItem>
          </CommandLaunchBackstageItem>
          <SeparatorBackstageItem
            key="backstage-item-separator-200-400"
          >
            <BackstageSeparator
              key="NaN"
            >
              <div
                className="nz-backstage-separator"
              />
            </BackstageSeparator>
          </SeparatorBackstageItem>
          <FrontstageLaunchBackstageItem
            description="backstage.iModelStage"
            frontstageId="ViewsFrontstage"
            iconSpec="icon-placeholder"
            isEnabled={true}
            key="ViewsFrontstage"
            label="backstage.viewIModel"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="icon-placeholder"
                />
              }
              isActive={false}
              isDisabled={false}
              key="ViewsFrontstage"
              onClick={[Function]}
              subtitle="backstage.iModelStage"
            >
              <li
                className="nz-backstage-item"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="icon-placeholder"
                  >
                    <i
                      className="icon icon-placeholder"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    backstage.viewIModel
                  </span>
                  <span>
                    backstage.iModelStage
                  </span>
                </div>
              </li>
            </BackstageItem>
          </FrontstageLaunchBackstageItem>
          <SeparatorBackstageItem
            key="backstage-item-separator-400-500"
          >
            <BackstageSeparator
              key="NaN"
            >
              <div
                className="nz-backstage-separator"
              />
            </BackstageSeparator>
          </SeparatorBackstageItem>
          <CommandLaunchBackstageItem
            commandId="custom-test"
            description="subtitle"
            execute={[Function]}
            iconSpec="TestApp:icon"
            key="custom-test"
            label="backstage.custom"
            tooltip="tool-tip"
          >
            <BackstageItem
              icon={
                <Unknown
                  iconSpec="TestApp:icon"
                />
              }
              isActive={false}
              isDisabled={false}
              key="custom-test"
              onClick={[Function]}
            >
              <li
                className="nz-backstage-item"
                onClick={[Function]}
              >
                <div
                  className="nz-icon"
                >
                  <Component
                    iconSpec="TestApp:icon"
                  >
                    <i
                      className="icon TestApp:icon"
                    />
                  </Component>
                </div>
                <div>
                  <span>
                    backstage.custom
                  </span>
                </div>
              </li>
            </BackstageItem>
          </CommandLaunchBackstageItem>
        </ul>
      </div>
    </Backstage>
  </Backstage>
</BackstageComposer>
`;
