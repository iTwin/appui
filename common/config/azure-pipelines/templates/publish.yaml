parameters:
  - name: workingDir
    type: string
    default: $(System.DefaultWorkingDirectory)

steps:
  - powershell: Write-Host '##vso[task.setvariable variable=ShouldPublish;]True'
    displayName: Set should publish
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual'), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['VersionBump'], 'True'))

  - script: node common/scripts/install-run-rush.js publish --publish --pack --include-all
    displayName: rush publish pack
    workingDirectory: ${{ parameters.workingDir }}
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual'), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['ShouldPublish'], 'True'))

  - task: PythonScript@0
    displayName: Gather packages for release
    inputs:
      workingDirectory: ${{ parameters.workingDir }}
      scriptSource: filepath
      scriptPath: common/scripts/gather_packages.py
      arguments: "$(Build.ArtifactStagingDirectory) $(Build.SourcesDirectory) $(Build.SourceBranch)"
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual'), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['ShouldPublish'], 'True'))

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: packages"
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/appui/packages"
      ArtifactName: packages
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual'), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['ShouldPublish'], 'True'))
