# This defines the core steps for building and validating iTwin.js Core

parameters:
  - name: workingDir
    type: string
    default: $(System.DefaultWorkingDirectory)
  - name: rushBuildCacheEnabled
    type: number
    default: 1

steps:
  - script: node common/scripts/set-rush-write-cache-variables.js
    displayName: "Set Rush Write Cache Variables"
  - script: node common/scripts/install-run-rush.js check
    displayName: rush check
    workingDirectory: ${{ parameters.workingDir }}
  - task: PythonScript@0
    displayName: "rush change -v"
    inputs:
      workingDirectory: ${{ parameters.workingDir }}
      scriptSource: filepath
      scriptPath: common/scripts/run_rush_change.py
      arguments: $(Build.SourceBranch) $(Build.Reason) $(System.PullRequest.TargetBranch)
      failOnStderr: true
  - script: node common/scripts/install-run-rush.js install
    displayName: rush install
    workingDirectory: ${{ parameters.workingDir }}
  - script: node common/scripts/install-run-rush.js audit
    displayName: rush audit
    workingDirectory: ${{ parameters.workingDir }}
    condition: and(succeeded(), ne(variables['Agent.OS'], 'Darwin'))
  - script: node common/scripts/install-run-rush.js build -v -p max
    displayName: rush build
    workingDirectory: ${{ parameters.workingDir }}
    env:
      RUSH_BUILD_CACHE_CREDENTIAL: $(RushBuildCacheSAS)
      RUSH_BUILD_CACHE_ENABLED: ${{parameters.rushBuildCacheEnabled}}

  - script: node common/scripts/install-run-rush.js lint
    displayName: rush lint
    workingDirectory: ${{ parameters.workingDir }}

  # Run unit tests only if version bump. GH actions will run the tests on PRs.
  - script: npm run cover
    displayName: appui-react tests
    workingDirectory: "ui/appui-react"
    condition: and(succeededOrFailed(), eq(variables['VersionBump'], 'True'))

  - script: npm run cover
    displayName: components-react tests
    workingDirectory: "ui/components-react"
    condition: and(succeededOrFailed(), eq(variables['VersionBump'], 'True'))

  - script: npm run cover
    displayName: core-react tests
    workingDirectory: "ui/core-react"
    condition: and(succeededOrFailed(), eq(variables['VersionBump'], 'True'))

  - script: npm run cover
    displayName: imodel-components-react tests
    workingDirectory: "ui/imodel-components-react"
    condition: and(succeededOrFailed(), eq(variables['VersionBump'], 'True'))

  - script: npm run test
    displayName: run Codemod Tests
    workingDirectory: "tools/codemod"
    condition: and(succeeded(), ne(variables['Agent.OS'], 'Linux'))

  - script: node common/scripts/install-run-rush.js docs
    displayName: rush docs
    workingDirectory: ${{ parameters.workingDir }}
