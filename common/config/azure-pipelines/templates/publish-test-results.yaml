parameters:
  - name: NodeVersion # name of the parameter; required
    type: string # data type of the parameter; required
  - name: workingDir
    type: string
    default: $(System.DefaultWorkingDirectory)

steps:
  #-------
  # UI Tests
  #-------
  - task: PublishTestResults@2
    displayName: "Publish AppUI-React Test Results"
    inputs:
      testResultsFiles: "ui/appui-react/coverage/junit.xml"
      testRunTitle: "AppUI-React Tests - $(Agent.OS) - ${{ parameters.NodeVersion }}"
      searchFolder: ${{ parameters.workingDir }}
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: "Publish Components-React Test Results"
    inputs:
      testResultsFiles: "ui/components-react/coverage/junit.xml"
      testRunTitle: "Components-React Tests - $(Agent.OS) - ${{ parameters.NodeVersion }}"
      searchFolder: ${{ parameters.workingDir }}
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: "Publish Core-React Test Results"
    inputs:
      testResultsFiles: "ui/core-react/coverage/junit.xml"
      testRunTitle: "Core-React Tests - $(Agent.OS) - ${{ parameters.NodeVersion }}"
      searchFolder: ${{ parameters.workingDir }}
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: "Publish IModel-Components-React Test Results"
    inputs:
      testResultsFiles: "ui/imodel-components-react/coverage/junit.xml"
      testRunTitle: "IModel-Components-React Tests - $(Agent.OS) - ${{ parameters.NodeVersion }}"
      searchFolder: ${{ parameters.workingDir }}
    condition: succeededOrFailed()

  #-------
  # Codemod Tests
  #-------
  - task: PublishTestResults@2
    displayName: "Publish Codemod Test Results"
    inputs:
      testResultsFiles: "tools/codemod/test/codemod_test_results.xml"
      testRunTitle: "AppUI Codemod Tests - ${{ parameters.NodeVersion }}"
      searchFolder: ${{ parameters.workingDir }}
    condition: and(succeededOrFailed(), ne(variables['Agent.OS'], 'Linux'))
