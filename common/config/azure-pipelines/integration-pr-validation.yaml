# iModel.js Integration PR Validation Build
#
# Note: Currently a subset of all integration tests

trigger: none

variables:
- group: iModel.js non-secret config variables
- group: iModel.js Integration Test Users

jobs:
- job: Build
  condition: succeeded()
  strategy:
    matrix:
      "Node 10.16.0":
        Node_Version: 10.16.0
      "Node 10.x":
        Node_Version: 10.x
      "Node 12.x":
        Node_Version: 12.x

  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    clean: all

  - bash: |
      # All of these variables are,
      #   1. Set in the "Variables" tab with a slightly different name (dropped "test" from each one)
      #   2. Use the "Environment Variables" section below, and remapped to a new name
      #   3. Set as the correct name below
      #
      #  This is done so that we can keep the values secret within the build pipeline but then decrypt them in the environment when actually running the tests.
      #   > A better solution would be to figure out how to decrypt in Node itself

      echo "##vso[task.setvariable variable=imjs_test_regular_user_password;]$test_reg_password"
      echo "##vso[task.setvariable variable=USER_WITH_ACCESS_PASSWORD;]$test_reg_password"
      echo "##vso[task.setvariable variable=imjs_test_super_user_password;]$test_super_password"
      echo "##vso[task.setvariable variable=imjs_test_super_manager_user_password;]$test_super_manager_password"
      echo "##vso[task.setvariable variable=imjs_test_manager_user_password;]$test_manager_password"
      echo "##vso[task.setvariable variable=imjs_agent_test_client_secret;]$agent_client_secret"
      echo "##vso[task.setvariable variable=imjs_agent_v1_test_client_secret;]$agent_v1_client_secret"
      echo "##vso[task.setvariable variable=imjs_agent_v1_test_service_user_password;]$agent_v1_service_user_password"
      echo "##vso[task.setvariable variable=imjs_delegation_test_client_secret;]$delegation_test_client_secret"
      echo "##vso[task.setvariable variable=imjs_qa_seq_api_key;]$qa_seq_api_key"
    displayName: 'Add config to environment'
    env:
      test_reg_password: $(imjs_regular_user_password)
      test_manager_password: $(imjs_manager_user_password)
      test_super_password: $(imjs_super_user_password)
      test_super_manager_password: $(imjs_super_manager_user_password)
      agent_v1_client_secret: $(imjs_agent_v1_client_secret)
      agent_v1_service_user_password: $(imjs_agent_v1_service_user_password)
      agent_client_secret: $(imjs_agent_client_secret)
      delegation_test_client_secret: $(imjs_delegation_client_secret)
      qa_seq_api_key: $(imjs_qa_seq_key)

  - task: NodeTool@0
    displayName: 'Use Node $(Node_Version)'
    inputs:
      versionSpec: '$(Node_Version)'
      checkLatest: true

  - script: node ./common/scripts/install-run-rush install
    displayName: rush install

  - script: |
      node ./common/scripts/install-run-rush rebuild -v --to context-registry-client

      node ./common/scripts/install-run-rush rebuild -v --to extension-client

      node ./common/scripts/install-run-rush rebuild -v --to product-settings-client

      node ./common/scripts/install-run-rush rebuild -v --to projectshare-client

      node ./common/scripts/install-run-rush rebuild -v --to rpcinterface-full-stack-tests

      node ./common/scripts/install-run-rush rebuild -v --to oidc-signin-tool
    displayName: 'Rush build'

  - script: 'npm run test:integration'
    workingDirectory: 'clients/context-registry'
    displayName: 'Run Context Registry Client Tests'
    condition: succeededOrFailed()

  - script: 'npm run test:integration'
    workingDirectory: clients/extension
    displayName: 'Run Extension Client Tests'
    condition: succeededOrFailed()

  - script: 'npm run test:integration'
    workingDirectory: 'clients/product-settings'
    displayName: 'Run Product Settings Client Tests'
    condition: succeededOrFailed()

  - script: 'npm run test:integration'
    workingDirectory: clients/projectshare
    displayName: 'Run ProjectShare Client Tests'
    condition: succeededOrFailed()

  - script: 'npm run test:integration'
    workingDirectory: 'full-stack-tests/core'
    displayName: 'Run Core Full Stack Tests'
    enabled: false
    condition: succeededOrFailed()

  - script: 'npm run test:integration'
    workingDirectory: 'full-stack-tests/rpc-interface'
    displayName: 'Run RPC Interface Full Stack Tests'
    condition: succeededOrFailed()

  - script: 'npm run test:integration'
    workingDirectory: 'tools/oidc-signin-tool'
    displayName: 'Run OIDC Sign-in Tool Tests'
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Context Registry Client Test Results'
    inputs:
      testResultsFiles: 'clients/context-registry/lib/test/junit_results.xml'
      testRunTitle: 'Client - Context Registry Tests - $(Node_Version)'
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Extension Clients Test Results'
    inputs:
      testResultsFiles: 'clients/extension/lib/test/junit_results.xml'
      testRunTitle: 'Client - Extension Tests - $(Node_Version)'
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Forms Data Management Clients Test Results'
    inputs:
      testResultsFiles: 'clients/forms-data-management/lib/test/junit_results.xml'
      testRunTitle: 'Client - Forms Data Management Tests - $(Node_Version)'
    enabled: false
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Product Settings Clients Test Results'
    inputs:
      testResultsFiles: 'clients/product-settings/lib/test/junit_results.xml'
      testRunTitle: 'Client - Product Settings Tests - $(Node_Version)'
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Project Share Clients Test Results'
    inputs:
      testResultsFiles: 'clients/projectshare/lib/test/junit_results.xml'
      testRunTitle: 'Client - Project Share Tests - $(Node_Version)'
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish RBAC Clients Test Results'
    inputs:
      testResultsFiles: 'clients/rbac/lib/test/junit_results.xml'
      testRunTitle: 'Client - RBAC Tests - $(Node_Version)'
    enabled: false
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Reality Data Clients Test Results'
    inputs:
      testResultsFiles: 'clients/reality-data/lib/test/junit_results.xml'
      testRunTitle: 'Client - Reality Data Tests - $(Node_Version)'
    enabled: false
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Usage Logging Clients Test Results'
    inputs:
      testResultsFiles: 'clients/usage-logging/lib/test/junit_results.xml'
      testRunTitle: 'Client - Usage Logging Tests - $(Node_Version)'
    enabled: false
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Backend Test Results'
    inputs:
      testResultsFiles: 'core/backend/lib/test/junit_results.xml'
      testRunTitle: 'Core - Backend Tests - $(Node_Version)'
    enabled: false
    continueOnError: true
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Core Integration Test Results'
    inputs:
      testResultsFiles: 'full-stack-tests/core/lib/test/junit_results.xml'
      testRunTitle: 'Core - Integration Tests - $(Node_Version)'
    enabled: false
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Native App Integration Test Results'
    inputs:
      testResultsFiles: 'full-stack-tests/native-app/lib/test/junit_results.xml'
      testRunTitle: 'Native App - Integration Tests - $(Node_Version)'
    enabled: false
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Rpc Interface Integration Test Results'
    inputs:
      testResultsFiles: 'full-stack-tests/rpc-interface/full_stack_test_results/full_stack_test_result.xml'
      testRunTitle: 'Core - Integration Tests - $(Node_Version)'
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Presentation Integration Test Results'
    inputs:
      testResultsFiles: full-stack-tests/presentation/lib/test/junit_results.xml
      testRunTitle: 'Presentation - Integration Tests - $(Node_Version)'
    enabled: false
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish Oidc Signin Tool Test Results'
    inputs:
      testResultsFiles: 'tools/oidc-signin-tool/lib/test/junit_results.xml'
      testRunTitle: 'Tools - Oidc Signin Tool Tests - $(Node_Version)'
    condition: succeededOrFailed()
