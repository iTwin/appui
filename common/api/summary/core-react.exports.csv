sep=;
Release Tag;API Item
public;ActivateSettingsTabEvent 
deprecated;ActivateSettingsTabEvent 
public;ActivateSettingsTabEventArgs
deprecated;ActivateSettingsTabEventArgs
internal;AnnularSector
internal;Annulus
public;AsyncGetAutoSuggestDataFunc = (value: string) => Promise
public;AutoSuggest 
public;AutoSuggestData
public;AutoSuggestProps 
internal;Badge({ type }: BadgeProps): React_2.JSX.Element | null
internal;BadgeProps
public;BadgeType = BadgeType_2
public;BadgeType: typeof BadgeType_2
public;BlockText(props: TextProps): React_2.JSX.Element
deprecated;BlockText(props: TextProps): React_2.JSX.Element
public;BodyText(props: TextProps): React_2.JSX.Element
deprecated;BodyText(props: TextProps): React_2.JSX.Element
internal;calculateBackdropFilterBlur: (proximityScale: number) => number
internal;calculateBoxShadowOpacity: (proximityScale: number) => number
internal;calculateProximityScale: (proximity: number, snap?: boolean, threshold?: number) => number
internal;calculateToolbarOpacity: (proximityScale: number) => number
public;Centered(props: CommonDivProps): React_2.JSX.Element
deprecated;Centered(props: CommonDivProps): React_2.JSX.Element
public;CheckBoxInfo
public;CheckBoxState
public;CheckListBox 
deprecated;CheckListBox 
public;CheckListBoxItem 
deprecated;CheckListBoxItem 
public;CheckListBoxItemProps 
deprecated;CheckListBoxItemProps 
public;CheckListBoxSeparator(): React_2.JSX.Element
deprecated;CheckListBoxSeparator(): React_2.JSX.Element
internal;Circle
public;ClassNameProps
public;CommonDivProps 
public;CommonProps 
public;ConditionalIconItem
public;ContextMenu 
public;ContextMenuDirection
public;ContextMenuDivider 
public;ContextMenuItem 
public;ContextMenuItemProps 
public;ContextMenuProps 
public;ContextSubMenu 
public;ContextSubMenuProps 
internal;Corner
internal;CrossAxisArrowKeyFunc = (forward: boolean) => void
public;Dialog 
deprecated;Dialog 
public;DialogAlignment
deprecated;DialogAlignment
public;DialogProps 
deprecated;DialogProps 
public;DisabledText(props: TextProps): React_2.JSX.Element
deprecated;DisabledText(props: TextProps): React_2.JSX.Element
public;Div(props: DivProps): React_2.JSX.Element
deprecated;Div(props: DivProps): React_2.JSX.Element
public;DivProps 
deprecated;DivProps 
public;DivWithOutsideClick:
deprecated;DivWithOutsideClick:
public;ElementResizeObserver({ watchedElement, render, }:
public;ElementSeparator: (props: ElementSeparatorProps) => React_2.JSX.Element
deprecated;ElementSeparator: (props: ElementSeparatorProps) => React_2.JSX.Element
public;ElementSeparatorProps 
deprecated;ElementSeparatorProps 
public;ExecuteHandler = (this: void) => void
public;ExpandableList 
deprecated;ExpandableList 
public;ExpandableListProps 
deprecated;ExpandableListProps 
public;ExpansionToggle(props: ExpansionToggleProps): React_2.JSX.Element
public;ExpansionToggleProps 
public;FillCentered(props: CommonDivProps): React_2.JSX.Element
deprecated;FillCentered(props: CommonDivProps): React_2.JSX.Element
alpha;FilteredText(props: FilteredTextProps): React_2.JSX.Element
alpha;FilteredTextProps 
internal;flattenChildren: (children: React_2.ReactNode) => React_2.ReactNode
public;FlexWrapContainer(props: CommonDivProps): React_2.JSX.Element
deprecated;FlexWrapContainer(props: CommonDivProps): React_2.JSX.Element
internal;focusIntoContainer(focusContainer: HTMLDivElement, initialFocusElement?: React_2.RefObject
internal;FocusTrap(props: FocusTrapProps): React_2.JSX.Element | null
internal;FocusTrapProps 
public;Gap(props: GapProps): React_2.JSX.Element
deprecated;Gap(props: GapProps): React_2.JSX.Element
public;GapProps 
deprecated;GapProps 
public;GetAutoSuggestDataFunc = (value: string) => AutoSuggestData[]
internal;getBestBWContrastColor(hexColor: string): "black" | "white"
public;getCssVariable(variableName: string, htmlElement?: HTMLElement): string
public;getCssVariableAsNumber(variableName: string, htmlElement?: HTMLElement): number
internal;getDisplayName: (component: React_2.ComponentType
internal;getObjectClassName: (obj: any) => string
internal;getResizeObserver():
internal;getToolbarBackdropFilter: (filterBlur: number) => string
internal;getToolbarBackgroundColor: (opacity: number) => string
internal;getToolbarBoxShadow: (opacity: number) => string
internal;getUserColor(email: string): string
public;GlobalContextMenu 
public;GlobalContextMenuProps 
public;GlobalDialog 
deprecated;GlobalDialog 
public;GlobalDialogProps 
deprecated;GlobalDialogProps 
public;GlobalDialogState
deprecated;GlobalDialogState
internal;hasPointerEventsSupport(): boolean
public;HorizontalAlignment
public;Icon(props: IconProps): React_2.JSX.Element | null
public;IconHelper
public;IconInput: (props: IconInputProps) => React_2.ReactNode
deprecated;IconInput: (props: IconInputProps) => React_2.ReactNode
public;IconInputProps 
deprecated;IconInputProps 
public;IconProps 
public;IconSpec = string | ConditionalStringValue | React_2.ReactNode | ConditionalIconItem
public;ImageCheckBox 
deprecated;ImageCheckBox 
public;ImageCheckBoxProps 
deprecated;ImageCheckBoxProps 
public;InputLabel 
deprecated;InputLabel 
public;InputLabelProps 
deprecated;InputLabelProps 
public;InputStatus
deprecated;InputStatus
internal;isHTMLElement: (message: MessageType) => message is HTMLElement
internal;isNavigationKey(key: string): boolean
internal;isPromiseLike(obj: unknown): obj is PromiseLike
internal;isReactMessage: (message: MessageType) => message is ReactMessage
internal;ItemKeyboardNavigator
public;LabeledComponentProps
deprecated;LabeledComponentProps
internal;Line
alpha;Listbox(props: ListboxProps): React_2.JSX.Element
deprecated;Listbox(props: ListboxProps): React_2.JSX.Element
alpha;ListboxContext: React_2.Context
deprecated;ListboxContext: React_2.Context
alpha;ListboxContextProps
deprecated;ListboxContextProps
alpha;ListboxItem(props: ListboxItemProps): React_2.JSX.Element
deprecated;ListboxItem(props: ListboxItemProps): React_2.JSX.Element
alpha;ListboxItemProps 
deprecated;ListboxItemProps 
alpha;ListboxProps 
deprecated;ListboxProps 
alpha;ListboxValue = string
deprecated;ListboxValue = string
public;LoadingBar 
deprecated;LoadingBar 
public;LoadingBarProps 
deprecated;LoadingBarProps 
public;LoadingPrompt 
deprecated;LoadingPrompt 
public;LoadingPromptProps 
deprecated;LoadingPromptProps 
public;LoadingSpinner 
deprecated;LoadingSpinner 
public;LoadingSpinnerProps 
deprecated;LoadingSpinnerProps 
public;LoadingStatus 
deprecated;LoadingStatus 
public;LoadingStatusProps 
deprecated;LoadingStatusProps 
alpha;LocalizationProvider(props: LocalizationProviderProps): React_2.JSX.Element
public;LocalStateStorage 
public;MainTabsProps 
deprecated;MainTabsProps 
internal;mergeRefs
public;MessageBox 
public;MessageBoxProps 
public;MessageContainer 
public;MessageContainerProps 
public;MessagedComponentProps
deprecated;MessagedComponentProps
public;MessageRenderer(props: MessageRendererProps): React_2.JSX.Element | null
public;MessageRendererProps 
public;MessageType = string | HTMLElement | ReactMessage
public;MutedText(props: TextProps): React_2.JSX.Element
deprecated;MutedText(props: TextProps): React_2.JSX.Element
public;NoChildrenProps
public;NodeCheckboxProps
public;NodeCheckboxRenderer = (props: NodeCheckboxRenderProps) => React_2.ReactNode
public;NodeCheckboxRenderProps = Omit_2
public;NumberInput: (props: NumberInputProps) => React_2.ReactNode
deprecated;NumberInput: (props: NumberInputProps) => React_2.ReactNode
public;NumberInputProps 
deprecated;NumberInputProps 
public;OmitChildrenProp
public;Orientation
public;OutsideClickEvent = PointerEvent | MouseEvent | TouchEvent
internal;percentInRange(percent: number): number
internal;Point 
public;Popup 
internal;PopupContext: React_2.Context
public;PopupContextMenu(props: PopupContextMenuProps): React_2.JSX.Element
public;PopupContextMenuProps 
public;PopupProps 
public;ProcessSettingsContainerCloseEvent 
deprecated;ProcessSettingsContainerCloseEvent 
public;ProcessSettingsContainerCloseEventArgs
deprecated;ProcessSettingsContainerCloseEventArgs
public;ProcessSettingsTabActivationEvent 
deprecated;ProcessSettingsTabActivationEvent 
public;ProcessSettingsTabActivationEventArgs
deprecated;ProcessSettingsTabActivationEventArgs
internal;PROXIMITY_THRESHOLD_DEFAULT = 100
public;RadialButton 
deprecated;RadialButton 
public;RadialButtonProps 
deprecated;RadialButtonProps 
public;RadialMenu 
deprecated;RadialMenu 
public;RadialMenuProps 
deprecated;RadialMenuProps 
public;RadialSizeType = ProgressRadialProps["size"]
deprecated;RadialSizeType = ProgressRadialProps["size"]
public;RatioChangeResult
deprecated;RatioChangeResult
public;ReactMessage
internal;Rectangle 
public;RectangleProps
public;RenderPropsArgs
public;ResizableContainerObserver({ onResize, children, }:
internal;ResizeObserverType = default_2
public;ScrollPositionMaintainer 
public;ScrollView(props: CommonDivProps): React_2.JSX.Element
deprecated;ScrollView(props: CommonDivProps): React_2.JSX.Element
public;SearchBox 
deprecated;SearchBox 
public;SearchBoxProps 
deprecated;SearchBoxProps 
public;SettingsContainer: ({ tabs, onSettingsTabSelected, currentSettingsTab, settingsManager, showHeader, }: SettingsContainerProps) => React_2.JSX.Element
public;SettingsContainerProps
public;SettingsManager
public;SettingsProvidersChangedEvent 
deprecated;SettingsProvidersChangedEvent 
public;SettingsProvidersChangedEventArgs
deprecated;SettingsProvidersChangedEventArgs
public;SettingsTabEntry
public;SettingsTabsProvider
internal;shallowDiffers: (a:
internal;Size 
public;SizeProps
public;SortDirection
public;StepFunctionProp = number | ((direction: string) => number | undefined)
deprecated;StepFunctionProp = number | ((direction: string) => number | undefined)
public;StyledText(props: StyledTextProps): React_2.JSX.Element
deprecated;StyledText(props: StyledTextProps): React_2.JSX.Element
public;StyledTextProps 
deprecated;StyledTextProps 
public;SvgPath 
public;SvgPathProps 
public;TabLabel
deprecated;TabLabel
public;Tabs 
deprecated;Tabs 
public;TabsProps 
deprecated;TabsProps 
public;TextProps 
deprecated;TextProps 
public;TimeFormat
public;Timer
internal;TOOLBAR_BACKDROP_FILTER_BLUR_DEFAULT = 10
internal;TOOLBAR_BOX_SHADOW_OPACITY_DEFAULT = 0.35
internal;TOOLBAR_OPACITY_DEFAULT = 0.5
public;Tree 
public;TreeBranch 
public;TreeBranchProps 
public;TreeNode 
public;TreeNodePlaceholder 
public;TreeNodePlaceholderProps 
public;TreeNodeProps 
public;TreeProps 
public;UiCore
internal;UiGeometry
public;UiStateEntry
public;UiStateStorage
public;UiStateStorageResult
public;UiStateStorageStatus
public;UnderlinedButton(props: UnderlinedButtonProps): React_2.JSX.Element
deprecated;UnderlinedButton(props: UnderlinedButtonProps): React_2.JSX.Element
public;UnderlinedButtonProps
deprecated;UnderlinedButtonProps
public;useCrossOriginPopup(visible: boolean, url: string | undefined, title: string, width: number, height: number, onClose: () => void): void
public;useDisposable
deprecated;useDisposable
public;useEffectSkipFirst(callback: () => (void | (() => void | undefined)) | void, deps?: any[]): void
internal;useEventListener(eventName: string, handler: (event: Event) => void, element: HTMLElement | Document | undefined): void
beta;useInterval(callback: (...args: any[]) => void, delay: number | undefined): void
internal;useLayoutResizeObserver(inElement: HTMLElement | null, onResize?: (width?: number, height?: number) => void): (number | undefined)[]
public;useOptionalDisposable
internal;usePackageTranslation({ namespace, fallback, defaults, }:
internal;useProximityToMouse: (elementSet: WidgetElementSet, snap?: boolean, threshold?: number) => number
internal;useRefEffect
internal;useRefs
internal;useRefState
internal;useResizeObserver
public;useSaveBeforeActivatingNewSettingsTab(settingsManager: SettingsManager, saveFunction: (tabSelectionFunc: (args: any) => void, requestedSettingsTabId?: string) => void): void
public;useSaveBeforeClosingSettingsContainer(settingsManager: SettingsManager, saveFunction: (closeFunc: (args: any) => void, closeFuncArgs?: any) => void): void
internal;useTargeted: (ref: React_2.RefObject
internal;useWidgetOpacityContext(): WidgetOpacityContextProps
public;VerticalAlignment
public;VerticalTabs(props: TabsProps): React_2.JSX.Element
deprecated;VerticalTabs(props: TabsProps): React_2.JSX.Element
public;WebFontIcon(props: WebFontIconProps): React_2.JSX.Element
public;WebFontIconProps 
internal;WidgetElementSet 
internal;WidgetOpacityContext: React_2.Context
internal;WidgetOpacityContextProps
public;withIsPressed: 
public;WithIsPressedProps
public;withOnOutsideClick: 
public;WithOnOutsideClickProps
public;withTimeout: 
public;WithTimeoutProps