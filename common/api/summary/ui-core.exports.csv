sep=;
Release Tag;API Item
internal;AnnularSector
internal;Annulus
beta;AutoSuggest 
beta;AutoSuggestData
beta;AutoSuggestProps 
internal;Badge 
internal;BadgeProps 
internal;BadgeUtilities
internal;BetaBadge(props: CommonProps): JSX.Element
public;BlockText(props: TextProps): JSX.Element
public;BodyText(props: TextProps): JSX.Element
beta;BoundsFunctionProp = number | (() => number | undefined)
public;Button 
public;ButtonProps 
public;ButtonSize
public;ButtonType
internal;calculateBackdropFilterBlur: (proximityScale: number) => number
internal;calculateBoxShadowOpacity: (proximityScale: number) => number
internal;calculateProximityScale: (proximity: number, threshold?: number) => number
internal;calculateToolbarOpacity: (proximityScale: number) => number
public;Centered(props: CommonDivProps): JSX.Element
public;Checkbox 
public;CheckBoxInfo
public;CheckboxProps 
public;CheckBoxState
public;CheckListBox 
public;CheckListBoxItem 
public;CheckListBoxItemProps 
public;CheckListBoxSeparator(): JSX.Element
internal;Circle
public;ClassNameProps
public;CommonDivProps 
public;CommonProps 
public;ContextMenu 
public;ContextMenuDirection
public;ContextMenuDivider 
public;ContextMenuItem 
public;ContextMenuItemProps 
public;ContextMenuProps 
public;ContextSubMenu 
public;ContextSubMenuProps 
internal;Corner
public;Cube 
internal;CubeFace 
internal;CubeFaceProps 
public;CubeProps 
public;DateFormat
public;Dialog 
public;DialogAlignment
public;DialogButtonDef
public;DialogButtonStyle
public;DialogButtonType
public;DialogProps 
public;DisabledText(props: TextProps): JSX.Element
public;Div(props: DivProps): JSX.Element
public;DivProps 
public;DivWithOutsideClick:
public;ElementSeparator 
public;ElementSeparatorProps 
public;ExecuteHandler = (this: void) => void
public;ExpandableBlock 
public;ExpandableBlockProps 
public;ExpandableList 
public;ExpandableListProps 
public;ExpansionToggle 
public;ExpansionToggleProps 
public;Face
beta;FeaturedTile(props: TileProps): JSX.Element
beta;Field 
beta;FieldDef
beta;FieldDefinitions
beta;FieldEditor = "textbox" | "multilinetextbox" | "dropdown" | "checkbox"
beta;FieldProps 
beta;FieldValues
public;FillCentered(props: CommonDivProps): JSX.Element
internal;flattenChildren: (children: React.ReactNode) => React.ReactNode
public;FlexWrapContainer(props: CommonDivProps): JSX.Element
internal;FocusTrap(props: Props): JSX.Element | null
beta;Form 
beta;FormContext: React.Context
beta;FormContextState 
beta;FormProps
internal;getDisplayName: (component: React.ComponentType
internal;getToolbarBackdropFilter: (filterBlur: number) => string
internal;getToolbarBackgroundColor: (opacity: number) => string
internal;getToolbarBoxShadow: (opacity: number) => string
internal;getUserColor(email: string): string
public;GlobalContextMenu 
public;GlobalContextMenuProps 
public;GlobalDialog 
public;GlobalDialogProps 
public;Headline(props: TextProps): JSX.Element
public;HorizontalAlignment
public;HorizontalTabs 
public;Icon(props: IconProps): JSX.Element | null
public;IconHelper
public;IconInput 
public;IconInputProps 
public;IconProps
public;IconSpec = string | ConditionalStringValue | React.ReactNode
public;ImageCheckBox 
public;ImageCheckBoxProps 
public;Input 
public;InputLabel 
public;InputLabelProps 
public;InputProps 
public;InputStatus
internal;isPromiseLike(obj: unknown): obj is PromiseLike
public;LabeledComponentProps
public;LabeledInput 
public;LabeledInputProps 
public;LabeledSelect 
public;LabeledSelectProps 
public;LabeledTextarea 
public;LabeledTextareaProps 
public;LabeledToggle 
public;LabeledToggleProps 
public;LeadingText(props: TextProps): JSX.Element
public;LeadingText2(props: TextProps): JSX.Element
internal;Line
public;LoadingBar 
public;LoadingBarProps 
public;LoadingPrompt 
public;LoadingPromptProps
public;LoadingSpinner 
public;LoadingSpinnerProps 
public;LoadingStatus 
public;LoadingStatusProps 
beta;LocalUiSettings 
public;MainTabsProps 
public;MessageBox 
public;MessageBoxProps 
public;MessageContainer 
public;MessageContainerProps 
public;MessagedComponentProps
public;MessageSeverity
beta;MinimalFeaturedTile(props: TileProps): JSX.Element
beta;MinimalTile(props: TileProps): JSX.Element
public;MutedText(props: TextProps): JSX.Element
internal;NewBadge(props: CommonProps): JSX.Element
public;NoChildrenProps
beta;NodeCheckboxProps
beta;NodeCheckboxRenderer = (props: NodeCheckboxRenderProps) => React.ReactNode
beta;NodeCheckboxRenderProps = Omit
beta;NumericInput 
internal;NumericInputDefaultProps = Pick
beta;NumericInputProps 
public;Omit
public;OmitChildrenProp
public;Orientation
internal;Point 
public;PointProps
public;Popup 
public;PopupProps 
internal;PROXIMITY_THRESHOLD_DEFAULT = 100
beta;RadialButton 
beta;RadialButtonProps 
beta;RadialMenu 
beta;RadialMenuProps 
public;Radio 
public;RadioProps 
internal;ReactNumericInput 
beta;ReactNumericInputProps 
internal;ReactStepFunctionProp = number | ((component: ReactNumericInput, direction: string) => number | undefined)
internal;Rectangle 
public;RectangleProps
internal;ResizeObserver: ResizeObserverType
internal;ResizeObserverType = typeof import("resize-observer-polyfill").default
alpha;ScrollPositionMaintainer 
public;ScrollView(props: CommonDivProps): JSX.Element
public;SearchBox 
public;SearchBoxProps 
public;Select(props: SelectProps): JSX.Element
public;SelectProps 
beta;SessionUiSettings 
internal;shallowDiffers: (a:
internal;Size 
public;SizeProps
public;Slider(props: SliderProps): JSX.Element
public;SliderProps 
public;SmallText(props: TextProps): JSX.Element
public;SortDirection
public;Spinner 
public;SpinnerProps
public;SpinnerSize
public;SplitButton 
internal;SplitButtonActionType
public;SplitButtonProps 
beta;StepFunctionProp = number | ((direction: string) => number | undefined)
public;StyledText(props: StyledTextProps): JSX.Element
public;StyledTextProps 
public;Subheading(props: TextProps): JSX.Element
public;Subheading2(props: TextProps): JSX.Element
public;SvgPath 
public;SvgPathProps 
public;SvgSprite 
public;SvgSpriteProps 
public;Tabs 
public;TabsProps 
public;Textarea 
public;TextareaProps 
public;TextProps 
internal;TildeFinder
beta;Tile 
internal;TileDefaultProps = Pick
beta;TileProps 
public;TimeFormat
public;Timer
public;Title(props: TextProps): JSX.Element
public;Title2(props: TextProps): JSX.Element
public;Toggle(props: ToggleProps): JSX.Element
public;ToggleButtonType
public;ToggleProps 
internal;TOOLBAR_BACKDROP_FILTER_BLUR_DEFAULT = 10
internal;TOOLBAR_BOX_SHADOW_OPACITY_DEFAULT = 0.35
internal;TOOLBAR_OPACITY_DEFAULT = 0.5
public;Tree 
public;TreeBranch 
public;TreeBranchProps 
public;TreeNode 
public;TreeNodePlaceholder 
public;TreeNodePlaceholderProps 
public;TreeNodeProps 
public;TreeProps 
public;UiCore
public;UiEvent
beta;UiSetting
beta;UiSettings
beta;UiSettingsResult
beta;UiSettingsStatus
public;UnderlinedButton(props: UnderlinedButtonProps): JSX.Element
public;UnderlinedButtonProps
public;useDisposable
public;useEffectSkipFirst(callback: () => (void | (() => void | undefined)) | void, deps?: any[]): void
public;useOptionalDisposable
internal;useProximityToMouse: (elementRef: React.RefObject
internal;useRefEffect
internal;useRefs
internal;useResizeObserver
internal;useTargeted: (elementRef: React.RefObject
public;VerticalAlignment
public;VerticalTabs 
public;WebFontIcon(props: WebFontIconProps): JSX.Element
public;WebFontIconProps 
public;withIsPressed: 
public;WithIsPressedProps
public;withOnOutsideClick: 
public;WithOnOutsideClickProps
public;withTimeout: 
public;WithTimeoutProps