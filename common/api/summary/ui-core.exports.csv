sep=;
Release Tag;API Item
internal;AnnularSector
internal;Annulus
beta;AutoSuggest 
beta;AutoSuggestData
beta;AutoSuggestProps 
internal;Badge 
internal;BadgeProps 
internal;BadgeUtilities
internal;BetaBadge: React.FunctionComponent
public;BlockText: React.FunctionComponent
public;BodyText: React.FunctionComponent
beta;BoundsFunctionProp = number | (() => number | undefined)
public;Button 
public;ButtonProps 
public;ButtonSize
public;ButtonType
public;Centered: React.FunctionComponent
public;Checkbox 
public;CheckBoxInfo
public;CheckboxProps 
public;CheckBoxState
beta;CheckListBox 
beta;CheckListBoxItem 
beta;CheckListBoxItemProps 
beta;CheckListBoxSeparator: React.FunctionComponent
internal;Circle
public;ClassNameProps
public;CommonDivProps 
public;CommonProps 
public;ContextMenu 
public;ContextMenuDirection
public;ContextMenuDivider 
public;ContextMenuItem 
public;ContextMenuItemProps 
public;ContextMenuProps 
public;ContextSubMenu 
public;ContextSubMenuProps 
internal;Corner
beta;Cube 
internal;CubeFace 
internal;CubeFaceProps 
beta;CubeProps 
public;DateFormat
public;Dialog 
public;DialogAlignment
public;DialogButtonDef
public;DialogButtonStyle
public;DialogButtonType
public;DialogProps 
public;DisabledText: React.FunctionComponent
public;Div 
public;DivProps 
beta;DivWithOutsideClick:
public;ElementSeparator 
public;ElementSeparatorProps 
public;ExecuteHandler = (this: void) => void
public;ExpandableBlock 
public;ExpandableBlockProps 
public;ExpandableList 
public;ExpandableListProps 
public;ExpansionToggle 
public;ExpansionToggleProps 
beta;Face
beta;FeaturedTile: React.FunctionComponent
beta;Field 
beta;FieldDef
beta;FieldDefinitions
beta;FieldEditor = "textbox" | "multilinetextbox" | "dropdown" | "checkbox"
beta;FieldValues
public;FillCentered: React.FunctionComponent
internal;flattenChildren: (children: React.ReactNode) => React.ReactNode
public;FlexWrapContainer: React.FunctionComponent
beta;FocusTrap 
beta;Form 
beta;FormContext: React.Context
beta;FormContextState 
internal;getClassName: (obj: any) => string
internal;getDisplayName: (component: React.ComponentType
internal;getUserColor(email: string): string
public;GlobalContextMenu 
public;GlobalContextMenuProps 
public;GlobalDialog 
public;GlobalDialogProps 
public;Headline: React.FunctionComponent
public;HorizontalAlignment
beta;HorizontalTabs 
public;Icon: React.FunctionComponent
beta;IconInput 
beta;IconInputProps 
public;IconProps
public;IconSpec = string | ConditionalStringValue | React.ReactNode
beta;ImageCheckBox 
beta;ImageCheckBoxProps 
public;Input 
public;InputLabel 
public;InputLabelProps 
public;InputProps 
public;InputStatus
internal;isPromiseLike(obj: unknown): obj is PromiseLike
public;LabeledComponentProps
public;LabeledInput 
public;LabeledInputProps 
public;LabeledSelect 
public;LabeledSelectProps 
public;LabeledTextarea 
public;LabeledTextareaProps 
public;LabeledToggle 
public;LabeledToggleProps 
public;LeadingText: React.FunctionComponent
public;LeadingText2: React.FunctionComponent
internal;Line
beta;LoadingBar 
beta;LoadingBarProps 
beta;LoadingPrompt 
beta;LoadingPromptProps
beta;LoadingSpinner 
beta;LoadingSpinnerProps 
beta;LoadingStatus 
beta;LoadingStatusProps 
beta;LocalUiSettings 
beta;MainTabsProps 
public;MessageBox 
public;MessageBoxProps 
public;MessageContainer 
public;MessageContainerProps 
public;MessagedComponentProps
public;MessageSeverity
beta;MinimalFeaturedTile: React.FunctionComponent
beta;MinimalTile: React.FunctionComponent
public;MutedText: React.FunctionComponent
internal;NewBadge: React.FunctionComponent
beta;NoChildrenProps
beta;NodeCheckboxProps
beta;NodeCheckboxRenderer = (props: NodeCheckboxRenderProps) => React.ReactNode
beta;NodeCheckboxRenderProps = Omit
beta;NumericInput 
internal;NumericInputDefaultProps = Pick
beta;NumericInputProps 
public;Omit
beta;OmitChildrenProp
public;Orientation
internal;Point 
beta;PointProps
beta;Popup 
beta;PopupProps 
beta;Position
beta;RadialButton 
beta;RadialButtonProps 
beta;RadialMenu 
beta;RadialMenuProps 
public;Radio 
public;RadioProps 
internal;ReactNumericInput 
beta;ReactNumericInputProps 
internal;ReactStepFunctionProp = number | ((component: ReactNumericInput, direction: string) => number | undefined)
internal;Rectangle 
beta;RectangleProps
alpha;ScrollPositionMaintainer 
public;ScrollView: React.FunctionComponent
public;SearchBox 
public;SearchBoxProps 
public;Select 
public;SelectProps 
beta;SessionUiSettings 
internal;shallowDiffers: (a:
internal;Size 
beta;SizeProps
beta;Slider: React.FC
beta;SliderProps 
public;SmallText: React.FunctionComponent
public;SortDirection
public;Spinner 
public;SpinnerProps
public;SpinnerSize
beta;SplitButton 
internal;SplitButtonActionType
beta;SplitButtonProps 
beta;StepFunctionProp = number | ((direction: string) => number | undefined)
internal;StyledText 
internal;StyledTextProps 
public;Subheading: React.FunctionComponent
public;Subheading2: React.FunctionComponent
public;SvgPath 
public;SvgPathProps 
public;SvgSprite 
public;SvgSpriteProps 
beta;Tabs 
beta;TabsProps 
public;Textarea 
public;TextareaProps 
public;TextProps 
internal;TildeFinder
beta;Tile 
internal;TileDefaultProps = Pick
beta;TileProps 
public;TimeFormat
public;Timer
public;Title: React.FunctionComponent
public;Title2: React.FunctionComponent
public;Toggle 
public;ToggleButtonType
public;ToggleProps 
public;Tree 
public;TreeBranch 
public;TreeBranchProps 
public;TreeNode 
public;TreeNodePlaceholder 
public;TreeNodePlaceholderProps 
public;TreeNodeProps 
public;TreeProps 
public;UiCore
public;UiError: typeof UiError_2
public;UiEvent
beta;UiSettings
beta;UiSettingsResult
beta;UiSettingsStatus
public;UnderlinedButton(props: UnderlinedButtonProps): JSX.Element
public;UnderlinedButtonProps
public;useDisposable
public;useEffectSkipFirst(callback: () => (void | (() => void | undefined)) | void, deps?: any[]): void
public;VerticalAlignment
beta;VerticalTabs 
public;WebFontIcon: React.FunctionComponent
public;WebFontIconProps 
public;withIsPressed: 
public;WithIsPressedProps
public;withOnOutsideClick: 
public;WithOnOutsideClickProps
public;withTimeout: 
public;WithTimeoutProps